name: Test pip install on 3 platforms

on:
  workflow_dispatch:
#   push:
#     branches:
#       - main

jobs:
  build:
    strategy:
      max-parallel: 4
      matrix:
        # platform: [ubuntu-latest, macos-14, windows-latest]
        platform: [macos-14]
        python-version: ["3.10"]

    runs-on: ${{ matrix.platform }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install locally
        # if: matrix.platform == 'windows-latest'
        # also test with uv
        # MACOSX_DEPLOYMENT_TARGET=10.9 CC=clang CXX=clang++ python -m pip install xformers==0.0.27
        run: |
          python -m pip install torch==2.3.1
          python -m pip install --upgrade pip==23.3.2
          python -m pip install wheel ninja
          brew install llvm libomp
          MACOSX_DEPLOYMENT_TARGET=10.9 CC=/usr/local/opt/llvm/bin/clang CXX=/usr/local/opt/llvm/bin/clang++ python -m pip install xformers==0.0.27
          python -m pip install -r requirements.txt
          python -m pip install -r requirements_bark_hubert_quantizer.txt
          python -m pip install -r requirements_rvc.txt
          python -m pip install -r requirements_audiocraft_0.txt
          python -m pip install -r requirements_audiocraft.txt
          python -m pip install -r requirements_styletts2.txt
          python -m pip install -r requirements_vall_e.txt
          python -m pip install -r requirements_maha_tts.txt
          python -m pip install -r requirements_stable_audio.txt
          python -m pip install hydra-core==1.3.2
          python -m pip install nvidia-ml-py

      # - name: Check installation
      #   working-directory: /tmp
      #   run: python $GITHUB_WORKSPACE/scripts/check_installation.py

      - name: Lint with ruff
        run: ruff check .
